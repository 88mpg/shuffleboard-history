{"version":3,"sources":["variables.js","styled/BiscuitContainer.js","styled/Button.js","styled/Court.js","styled/Menu.js","components/Caret.js","components/Disc.js","components/LinesCanvas.js","components/ShootingArea.js","utils/copyToClipboard.js","utils/createLine.js","utils/defaultPositions.js","utils/loadPositions.js","utils/removeLines.js","utils/setLineCoords.js","App.js","serviceWorker.js","index.js"],"names":["invisibleBiscuit","document","querySelector","boardFrame","BOARD_WIDTH","getBoundingClientRect","width","BISCUIT_SIZE","BiscuitContainer","styled","div","DRAG_SHADOW_SIZE","Button","button","Court","Menu","nav","Caret","onClick","CaretContainer","viewBox","d","stroke","strokeWidth","Disc","forwardRef","props","ref","StyledDisc","className","data-biscuit","biscuit","span","LinesCanvas","StyledLinesCanvas","ShootingArea","isEnabled","SVGContainer","x","y","preserveAspectRatio","points","copyToClipboard","params","str","toString","window","location","origin","el","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","createLine","name","color","biscuitLine","remove","innerHTML","sizing","board","innerWidth","gutter","defaultPositions","positions","i","isYellow","count","yellowX","blackX","innerHeight","loadPositions","defaultPos","y1","has","get","split","y2","y3","y4","b1","b2","b3","b4","removeLines","setLineCoords","line","biscuitCoordParams","URLSearchParams","search","originalCoordParams","DEFAULT_POSITIONS","LOADED_POSITIONS","hasQueries","href","includes","App","linesCanvasRef","createRef","useState","currentPositions","setCurrentPositions","shootingAreaEnabled","setShootingAreaEnabled","linesEnabled","setLinesEnabled","resetToggle","setResetToggle","menuActive","setMenuActive","copyUrlEnabled","setCopyUrlEnabled","isInitialBoard","setIsInitialBoard","hasMoved","setHasMoved","handleStart","e","biscuitName","target","dataset","biscuitColor","classList","contains","current","handleStop","set","toFixed","handleDrag","biscuits","Object","entries","useEffect","opacity","map","bounds","defaultPosition","onStart","onStop","onDrag","key","disabled","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74e03f72.chunk.js","sourcesContent":["const invisibleBiscuit = document.querySelector('.invisible-biscuit');\nconst boardFrame = document.querySelector('.board-frame');\n\nexport const lightPrimary = `#8cdbd6`;\nexport const darkPrimary = `#4a8c88`;\nexport const lightSecondary = `#f03f41`;\n\nexport const COLLAPSED_MENU_HEIGHT = 50;\nexport const BOARD_MAX_WIDTH = 650;\nexport const BOARD_WIDTH = boardFrame.getBoundingClientRect().width;\nexport const BISCUIT_SIZE = invisibleBiscuit.getBoundingClientRect().width;\n","import styled from 'styled-components';\nimport { BISCUIT_SIZE } from '../variables';\n\nconst DRAG_SHADOW_SIZE = 50;\n\nexport const BiscuitContainer = styled.div`\n  z-index: 10;\n  position: absolute;\n  &::before {\n    opacity: 0;\n    content: '';\n  }\n\n  & > span {\n    height: ${BISCUIT_SIZE}px;\n    width: ${BISCUIT_SIZE}px;\n  }\n\n  &.react-draggable-dragging {\n    z-index: 20;\n    &::before {\n      content: '';\n      position: absolute;\n      background-color: rgba(0, 0, 0, 0.25);\n      border-radius: 50%;\n      height: calc(100% + ${DRAG_SHADOW_SIZE}px);\n      width: calc(100% + ${DRAG_SHADOW_SIZE}px);\n      transform: translate3d(-${DRAG_SHADOW_SIZE / 2}px, -${DRAG_SHADOW_SIZE / 2}px, 0);\n      opacity: 1;\n    }\n\n    & > span {\n      transform: scale;\n    }\n  }\n  &.is-disabled {\n    pointer-events: none;\n    & > span {\n      background-color: rgba(0, 0, 0, 0.75) !important;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { lightSecondary } from '../variables';\n\nexport const Button = styled.button`\n  appearance: none;\n  font-family: 'Futura';\n  border: none;\n  font-weight: 900;\n  font-size: 14px;\n  letter-spacing: 1px;\n  border-radius: 5px;\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\n  text-transform: uppercase;\n  padding: 15px 20px;\n  display: inline-block;\n  background-color: ${lightSecondary};\n  color: white;\n  text-shadow: 0 0 5px black;\n  transition: all 150ms ease;\n  cursor: pointer;\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:not(:disabled) {\n    &:hover {\n      background-color: #ed2225;\n    }\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { lightPrimary, BOARD_MAX_WIDTH } from '../variables';\n\nexport const Court = styled.div`\n  position: relative;\n  background: ${lightPrimary};\n  width: 100%;\n  height: 100vh;\n  max-width: ${BOARD_MAX_WIDTH}px;\n\n  @media (max-width: ${BOARD_MAX_WIDTH}px) {\n    border: none;\n  }\n`;\n","import styled from 'styled-components';\nimport { COLLAPSED_MENU_HEIGHT, BOARD_MAX_WIDTH } from '../variables';\n\nexport const Menu = styled.nav`\n  background-color: rgba(245, 245, 220, 0.95);\n  display: flex;\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\n  flex-direction: column;\n  padding: 0 20px 40px;\n  z-index: 1000;\n  transform: translate3d(0, calc(100% - ${COLLAPSED_MENU_HEIGHT}px), 0);\n  transition: all 150ms ease;\n  position: fixed;\n  width: 100vw;\n  max-width: ${BOARD_MAX_WIDTH}px;\n  bottom: 0;\n  &.is-open {\n    transform: translate3d(0, 0, 0);\n\n    svg {\n      transform: scaleY(1);\n    }\n  }\n\n  & > div:first-child {\n    height: ${COLLAPSED_MENU_HEIGHT}px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Caret = ({onClick}) => (\n  <CaretContainer onClick={onClick}>\n    <svg viewBox=\"0 0 26 19\">\n      <path d=\"M13 12.49l-8-8M21 4.49l-8.35 8.35\" stroke=\"black\" strokeWidth=\"2px\"></path>\n    </svg>\n  </CaretContainer>\n);\n\nexport default Caret;\n\nconst CaretContainer = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\noverflow: hidden;\ncursor: pointer;\n\n  svg {\n    margin-top: -10px;\n    transition: transform 150ms ease-in-out;\n    transform: scaleY(-1);\n    width: 50px;\n  }\n`;\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\n\n// Biscuits are 6\" in diameter\nconst Disc = forwardRef((props, ref) => (\n  <StyledDisc className={props.className} data-biscuit={props.biscuit} ref={ref}>\n    <span />\n  </StyledDisc>\n));\n\nexport default Disc;\n\nconst StyledDisc = styled.span`\n  cursor: move;\n  display: block;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0 6px 0px black inset;\n  transition: all 100ms ease-in-out;\n  position: relative;\n\n  &.yellow {\n    background: #fdd835;\n  }\n  &.black {\n    background: #444;\n  }\n\n  & > span {\n    pointer-events: none;\n    height: 60%;\n    width: 60%;\n    border-radius: 50%;\n    box-shadow: 0 0 11px -1px black inset;\n  }\n`;\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { lightSecondary } from '../variables';\n\nconst LinesCanvas = forwardRef((props, ref) => (\n  <StyledLinesCanvas className={props.className} ref={ref} />\n));\n\nexport default LinesCanvas;\n\nconst StyledLinesCanvas = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 5;\n  transition: background-color 150ms ease;\n\n  &.is-disabled {\n    background-color: rgba(0, 0, 0, 0.5);\n\n    line {\n      stroke: black;\n    }\n\n    circle {\n      fill: black !important;\n    }\n  }\n\n  svg {\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    width: 100%;\n    height: 100%;\n    transition: all 150ms ease;\n\n    line {\n      stroke: ${lightSecondary};\n    }\n\n    circle {\n      opacity: 0.5;\n      &.yellow {\n        fill: yellow;\n      }\n      &.black {\n        fill: black;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ShootingArea = (isEnabled) => (\n  <SVGContainer className={isEnabled.isEnabled ? 'is-enabled' : ''}>\n    <svg\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 72 126\"\n      preserveAspectRatio=\"xMidYMax meet\"\n      className=\"other-board\"\n    >\n      <polygon className=\"box\" points=\"-0.46,125.4 71.54,125.4 66,107.4 6,107.4 \" />\n      <polygon\n        className=\"triangle\"\n        points=\"33.97,125.4 37.98,125.4 36.1,107.41 35.87,107.38 \"\n      />\n    </svg>\n  </SVGContainer>\n);\n\nexport default ShootingArea;\n\nconst SVGContainer = styled.div`\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  height: calc(100vh - 70px);\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 40px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 150ms ease;\n  &.is-enabled {\n    opacity: 1;\n  }\n\n  svg {\n    max-height: 100%;\n    width: 100%;\n    overflow: visible;\n    fill: transparent;\n  }\n\n  .box {\n    stroke: rgba(0, 0, 0, 0.65);\n    fill: rgba(0, 0, 0, 0.25);\n  }\n\n  .triangle {\n    fill: rgba(0, 0, 0, 0.75);\n    stroke: none;\n  }\n`;\n","const copyToClipboard = params => {\n  const paramString = params.toString();\n  let str =\n    paramString !== ''\n      ? `${window.location.origin}?${params}`\n      : `${window.location.origin}`;\n  const el = document.createElement('textarea');\n\n  el.value = str;\n  el.setAttribute('readonly', '');\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n};\n\nexport default copyToClipboard;\n","import { BISCUIT_SIZE } from '../variables';\n\nconst createLine = (ref, name, color, x, y) => {\n  const biscuitLine = document.querySelector(`.${name}`);\n\n  if (biscuitLine) {\n    biscuitLine.remove();\n  }\n\n  ref.innerHTML += `\n    <svg class=\"${name}\">\n      <circle\n        r=\"${BISCUIT_SIZE / 2}\"\n        cx=\"${x + BISCUIT_SIZE / 2}\"\n        cy=\"${y + BISCUIT_SIZE / 2}\"\n        class=\"${color}\"\n      />\n      <line\n        stroke-width=\"3px\"\n        stroke-dasharray=\"5px\"\n        x1=\"${x + BISCUIT_SIZE / 2}\"\n        y1=\"${y + BISCUIT_SIZE / 2}\"\n        x2=\"${x + BISCUIT_SIZE / 2}\"\n        y2=\"${y + BISCUIT_SIZE / 2}\"\n      />\n    </svg>\n  `;\n};\n\nexport default createLine;\n","import {\n  BOARD_WIDTH,\n  BOARD_MAX_WIDTH,\n  BISCUIT_SIZE,\n  COLLAPSED_MENU_HEIGHT,\n} from '../variables';\n\nlet sizing = {\n  board: window.innerWidth,\n  gutter: 10,\n};\n\nif (window.innerWidth > BOARD_MAX_WIDTH) {\n  sizing.board = document.querySelector('#board').getBoundingClientRect().width + 20;\n  sizing.gutter = window.innerWidth > 650 ? (sizing.board - BOARD_WIDTH) / 2 : 10;\n}\n\nconst defaultPositions = () => {\n  const positions = {};\n\n  for (let i = 0; i < 8; i++) {\n    const isYellow = i < 4;\n    const color = isYellow ? 'y' : 'b';\n    const count = i % 4;\n    const yellowX =\n      sizing.board / 2 -\n      (BISCUIT_SIZE + sizing.board / 16.5) -\n      (BISCUIT_SIZE * count + 5 * count);\n    const blackX =\n      sizing.board / 2 +\n      (BISCUIT_SIZE + sizing.board / 16.5) +\n      (BISCUIT_SIZE * (count - 1) + 5 * count);\n\n    positions[color + (count + 1)] = {\n      x: isYellow ? yellowX : blackX,\n      y: window.innerHeight - (BISCUIT_SIZE + COLLAPSED_MENU_HEIGHT + 20),\n    };\n  }\n\n  return positions;\n};\n\nexport default defaultPositions;\n","import defaultPositions from './defaultPositions';\n\nconst loadPositions = params => {\n  const defaultPos = defaultPositions();\n\n  return {\n    y1: {\n      x: params.has('y1') ? +params.get('y1').split('-')[0] : defaultPos.y1.x,\n      y: params.has('y1') ? +params.get('y1').split('-')[1] : defaultPos.y1.y,\n    },\n    y2: {\n      x: params.has('y2') ? +params.get('y2').split('-')[0] : defaultPos.y2.x,\n      y: params.has('y2') ? +params.get('y2').split('-')[1] : defaultPos.y2.y,\n    },\n    y3: {\n      x: params.has('y3') ? +params.get('y3').split('-')[0] : defaultPos.y3.x,\n      y: params.has('y3') ? +params.get('y3').split('-')[1] : defaultPos.y3.y,\n    },\n    y4: {\n      x: params.has('y4') ? +params.get('y4').split('-')[0] : defaultPos.y4.x,\n      y: params.has('y4') ? +params.get('y4').split('-')[1] : defaultPos.y4.y,\n    },\n    b1: {\n      x: params.has('b1') ? +params.get('b1').split('-')[0] : defaultPos.b1.x,\n      y: params.has('b1') ? +params.get('b1').split('-')[1] : defaultPos.b1.y,\n    },\n    b2: {\n      x: params.has('b2') ? +params.get('b2').split('-')[0] : defaultPos.b2.x,\n      y: params.has('b2') ? +params.get('b2').split('-')[1] : defaultPos.b2.y,\n    },\n    b3: {\n      x: params.has('b3') ? +params.get('b3').split('-')[0] : defaultPos.b3.x,\n      y: params.has('b3') ? +params.get('b3').split('-')[1] : defaultPos.b3.y,\n    },\n    b4: {\n      x: params.has('b4') ? +params.get('b4').split('-')[0] : defaultPos.b4.x,\n      y: params.has('b4') ? +params.get('b4').split('-')[1] : defaultPos.b4.y,\n    },\n  };\n};\n\nexport default loadPositions;\n","const removeLines = el => (el.innerHTML = '');\n\nexport default removeLines;\n","import { BISCUIT_SIZE } from '../variables';\n\nconst setLineCoords = (line, x, y) => {\n  line.querySelector('line').setAttribute('x2', x + BISCUIT_SIZE / 2);\n  line.querySelector('line').setAttribute('y2', y + BISCUIT_SIZE / 2);\n};\nexport default setLineCoords;\n","import React, { useState, useEffect, createRef } from 'react';\nimport Draggable from 'react-draggable';\nimport { BiscuitContainer, Button, Court, Menu } from './styled';\nimport { Caret, Disc, LinesCanvas, ShootingArea } from './components';\nimport {\n  copyToClipboard,\n  createLine,\n  defaultPositions,\n  loadPositions,\n  removeLines,\n  setLineCoords,\n} from './utils';\n\nlet biscuitCoordParams = new URLSearchParams(window.location.search);\nconst originalCoordParams = new URLSearchParams(window.location.search).toString();\nconst DEFAULT_POSITIONS = defaultPositions();\nconst LOADED_POSITIONS = loadPositions(biscuitCoordParams);\nconst hasQueries = window.location.href.includes('?');\n\nconst App = () => {\n  const linesCanvasRef = createRef();\n  const [currentPositions, setCurrentPositions] = useState({ ...LOADED_POSITIONS });\n\n  // probably best to combine these into one state object\n  const [shootingAreaEnabled, setShootingAreaEnabled] = useState(false);\n  const [linesEnabled, setLinesEnabled] = useState(false);\n  const [resetToggle, setResetToggle] = useState(false);\n  const [menuActive, setMenuActive] = useState(false);\n  const [copyUrlEnabled, setCopyUrlEnabled] = useState(false);\n  const [isInitialBoard, setIsInitialBoard] = useState(!hasQueries ? true : false);\n  const [hasMoved, setHasMoved] = useState(false);\n\n  const handleStart = (e, el) => {\n    const biscuitName = e.target.dataset.biscuit;\n    const biscuitColor = e.target.classList.contains('yellow') ? 'yellow' : 'black';\n    const { x, y } = el;\n\n    if (linesEnabled) {\n      createLine(linesCanvasRef.current, biscuitName, biscuitColor, x, y);\n    }\n\n    setCopyUrlEnabled(true);\n  };\n\n  const handleStop = (e, el) => {\n    const biscuitName = e.target.dataset.biscuit;\n    const { x, y } = el;\n\n    biscuitCoordParams.set(biscuitName, `${x.toFixed(0)}-${y.toFixed(0)}`);\n    setIsInitialBoard(false);\n  };\n\n  const handleDrag = (e, el) => {\n    const biscuitName = e.target.dataset.biscuit;\n    const { x, y } = el;\n    const biscuitLine = document.querySelector(`.${biscuitName}`);\n\n    if (biscuitLine) {\n      setLineCoords(biscuitLine, x, y);\n    }\n\n    setCurrentPositions({\n      ...currentPositions,\n      [`${biscuitName}`]: { x: x, y: y },\n    });\n\n    setIsInitialBoard(false);\n    setHasMoved(true);\n  };\n\n  const toggleLines = (isLineEnabled) => {\n    setLinesEnabled(!isLineEnabled);\n    removeLines(linesCanvasRef.current);\n  };\n\n  const resetBiscuits = () => {\n    biscuitCoordParams = new URLSearchParams(originalCoordParams);\n    setCurrentPositions({ ...LOADED_POSITIONS });\n    setResetToggle(!resetToggle);\n    removeLines(linesCanvasRef.current);\n    setCopyUrlEnabled(false);\n    setIsInitialBoard(!hasQueries ? true : false);\n    setHasMoved(false);\n  };\n\n  const clearBoard = () => {\n    biscuitCoordParams = new URLSearchParams('');\n    setCurrentPositions({ ...DEFAULT_POSITIONS });\n    removeLines(linesCanvasRef.current);\n    setCopyUrlEnabled(false);\n    setHasMoved(true);\n    setIsInitialBoard(true);\n  };\n\n  const biscuits = Object.entries(LOADED_POSITIONS);\n\n  useEffect(() => {\n    setCurrentPositions(LOADED_POSITIONS);\n    document.querySelector('#board').style.opacity = 1;\n  }, []);\n\n  return (\n    <Court>\n      <LinesCanvas ref={linesCanvasRef} className={menuActive ? 'is-disabled' : ''} />\n      {biscuits.map((biscuit) => (\n        <Draggable\n          bounds=\"parent\"\n          defaultPosition={{ x: biscuit[1].x, y: biscuit[1].y }}\n          position={{\n            x: currentPositions[biscuit[0]].x,\n            y: currentPositions[biscuit[0]].y,\n          }}\n          onStart={handleStart}\n          onStop={handleStop}\n          onDrag={handleDrag}\n          key={`${biscuit[0]}_${resetToggle}`}\n        >\n          <BiscuitContainer className={menuActive ? 'is-disabled' : ''}>\n            <Disc\n              className={biscuit[0].includes('y') ? 'yellow' : 'black'}\n              biscuit={biscuit[0]}\n            />\n          </BiscuitContainer>\n        </Draggable>\n      ))}\n      <Menu className={menuActive ? 'is-open' : ''}>\n        <Caret onClick={() => setMenuActive(!menuActive)} />\n        <Button onClick={() => toggleLines(linesEnabled)}>\n          {linesEnabled ? 'Disable Lines' : 'Enable Lines'}\n        </Button>\n        <Button onClick={() => setShootingAreaEnabled(!shootingAreaEnabled)}>\n          {shootingAreaEnabled ? 'Disable Shooting Area' : 'Enable Shooting Area'}\n        </Button>\n        {hasQueries && (\n          <Button onClick={resetBiscuits} disabled={!hasMoved}>\n            Reset Biscuits\n          </Button>\n        )}\n        <Button\n          onClick={() => copyToClipboard(biscuitCoordParams)}\n          disabled={!copyUrlEnabled}\n        >\n          Copy Link to Clipboard\n        </Button>\n        <Button onClick={clearBoard} disabled={isInitialBoard}>\n          Clear Board\n        </Button>\n      </Menu>\n      <ShootingArea isEnabled={shootingAreaEnabled} />\n    </Court>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}